
        """
        :type triangle: List[List[int]]
        :rtype: int
        2
        | \
        3  4
        | \| \
        6  5  7
        | \| \| \
        4  1  8  3
[
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3]
]
如果是j=0也就是直角边，路径只能是上一个节点，j=i也就是斜边最外面的点，路径也只能是上一节点，中间的节点要比较一下上一层的两个节点
class Solution:
    def minimumTotal(self, triangle: List[List[int]]) -> int:
        n = len(triangle)
        if n == 0:
            return 0
        res = [0]*n
        res[0] = triangle[0][0]
        for i in range(1,n):
            j = i
            while j>=0:
                if j==0:
                    res[j] = res[j] + triangle[i][j]
                elif j==i:
                    res[j] = res[j-1] + triangle[i][j]
                else:
                    res[j] = triangle[i][j]+min(res[j],res[j-1])
                j -= 1
        return sorted(res)[0]
